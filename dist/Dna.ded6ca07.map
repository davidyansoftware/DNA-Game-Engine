{"version":3,"sources":["src/Utilities/Angle.js","src/Composite.js","src/Transform.js","src/Canvas.js","src/GameObject.js","src/Component.js","src/Scene.js","src/Components/Image.js","src/Components/SimplePhysics.js","src/Components/Polygon.js","src/Components/Rectangle.js","src/Components/Physics.js","src/Components/Acceleration.js","src/Components/Hitcircle.js","src/Components/Hitbox.js","src/Components/Text.js","src/Components/Audio.js","src/Utilities/Position.js","src/Input/Input.js","src/Input/Keyboard.js","src/Input/Mouse.js","src/Dom/Image.js","src/Dna.js"],"names":["degreesToRadians","degrees","Math","PI","radiansToDegrees","radians","Angle","_degrees","_radians","angle","spread","random","Radians","UP","LEFT","DOWN","RIGHT","Degrees","updateContext","drawSettings","context","save","translate","x","y","rotate","rotation","scale","xScale","yScale","restoreContext","restore","Composite","gameObjects","gameObject","push","index","indexOf","splice","deltaTime","update","forEach","updateAll","dead","destroyNow","currDraw","getContext","transform","render","renderAll","defaults","depth","Transform","options","prevX","prevY","dx","dy","atan2","other","thisCenter","getAbsoluteCenter","otherCenter","sqrt","pow","pos","parent","getAbsoluteRotation","addDegrees","distance","hypotenuse","sin","cos","center","rad","parentCenter","parentRotation","CanvasTransform","domCanvas","width","height","StaticCanvas","load","start","ctx","Promise","all","then","clearRect","canvas","clear","console","log","Canvas","currTime","prevTime","self","window","requestAnimationFrame","gameLoop","scene","GameObject","components","active","i","length","addComponent","setParent","component","onDestroy","removeGameObject","maintainAbsolutePosition","prevCenter","addGameObject","setAbsoluteCenter","getScene","getCanvas","Component","Scene","canvases","assets","addCanvas","Assets","key","asset","resolve","recalculateIndex","image","_framesPerRow","frameIndex","numberOfFrames","_xIndex","xIndexStart","_yIndex","yIndexStart","floor","getWeightedIndex","arr","prevTotal","types","default","tiled","stretched","randomTiled","Image","type","ticksPerFrame","loop","onFinish","xWeight","yWeight","tickCount","updateOptions","destWidth","destHeight","undefined","startingColumn","startingRow","drawImage","currTileX","endTileX","endTileY","currTileY","numTilesX","numTilesY","tileWidth","tileHeight","xRandom","yRandom","xTile","yTile","SimplePhysics","xv","yv","Polygon","vertOffset","opts","radius","vert","jaggedness","strokeStyle","fillStyle","beginPath","arc","moveTo","lineTo","closePath","stroke","fill","Rectangle","fillRect","Physics","speed","distanceTraveled","maxDistance","Infinity","callback","destroy","Acceleration","physics","accel","friction","Hitcircle","hurtboxes","hitboxSet","onCollision","onCollisionEnter","onCollisionExit","collidingWith","num","hurtbox","collidingWithIndex","prevColliding","collidingWithHitcircle","hitbox","hitboxCenter","hitcircle","hitcircleCenter","distanceBetween","Hitbox","collidingWithHitbox","DEFAULT","text","textAlign","textBaseline","font","Text","fillText","Audio","audio","volume","clip","src","currentTime","play","recalculateVector","position","_angle","_y","_x","_magnitude","_dirtyVector","recalculateCoordinates","_dirtyCoordinates","_prevRadians","Position","magnitude","UNIT_LEFT","UNIT_RIGHT","UNIT_UP","UNIT_DOWN","Coordinates","Vector","Input","handler","activeInputs","registeredInputs","Object","keys","command","registerCommand","document","addEventListener","event","keyCode","preventDefault","repeat","keycode","Array","isArray","Keyboard","onKeyDown","onKeyUp","Mouse","onLeftClick","onRightClick","rect","getBoundingClientRect","clientX","round","left","clientY","top","leftClick","body","DomImage","reject","onload","onerror","Dna","Components","Utilities","Dom"],"mappings":"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","file":"Dna.ded6ca07.map","sourceRoot":"..","sourcesContent":["//import { Coordinates } from \"./Position\";\n\nfunction degreesToRadians(degrees) {\n  return (degrees * Math.PI) / 180;\n}\n\nfunction radiansToDegrees(radians) {\n  return (radians * 180) / Math.PI;\n}\n\nclass Angle {\n  constructor(degrees, radians) {\n    this._degrees = degrees;\n    this._radians = radians;\n\n    //TODO dirty flags\n  }\n\n  get degrees() {\n    return this._degrees;\n  }\n  get radians() {\n    return this._radians;\n  }\n\n  set degrees(degrees) {\n    this._degrees = degrees;\n    this._radians = degreesToRadians(degrees);\n  }\n  set radians(radians) {\n    this._radians = radians;\n    this._degrees = radiansToDegrees(radians);\n  }\n\n  add(angle) {\n    this.radians += angle.radians;\n    return this;\n  }\n\n  addRadians(radians) {\n    this.radians += radians;\n    return this;\n  }\n\n  addDegrees(degrees) {\n    this.degrees += degrees;\n    return this;\n  }\n\n  getNewAngle(spread) {\n    let radians = this.radians;\n    radians -= spread.radians / 2;\n    radians += Math.random() * spread.radians;\n    return new Radians(radians);\n  }\n\n  /*\n  getUnitCoordinates(scale = 1) {\n    return new Coordinates(\n      Math.sin(this.radians) * scale,\n      -Math.cos(this.radians) * scale\n    );\n  }\n  */\n\n  static get UP() {\n    return UP;\n  }\n  static get LEFT() {\n    return LEFT;\n  }\n  static get DOWN() {\n    return DOWN;\n  }\n  static get RIGHT() {\n    return RIGHT;\n  }\n}\n\nclass Degrees extends Angle {\n  constructor(degrees) {\n    //return new Angle(degrees, degreesToRadians(degrees));\n    super(degrees, degreesToRadians(degrees));\n  }\n}\n\nclass Radians extends Angle {\n  constructor(radians) {\n    //return new Angle(radiansToDegrees(radians), radians);\n    super(radiansToDegrees(radians), radians);\n  }\n}\n\nconst UP = new Radians(0);\nconst LEFT = new Radians(Math.PI / 2);\nconst DOWN = new Radians(Math.PI);\nconst RIGHT = new Radians((3 * Math.PI) / 2);\n\nexport { Degrees, Radians };\n","import { Degrees } from \"./Utilities/Angle\";\n\nfunction updateContext(drawSettings) {\n  let context = drawSettings.context;\n  context.save();\n\n  context.translate(drawSettings.x, drawSettings.y);\n  context.rotate(drawSettings.rotation.radians);\n  context.scale(drawSettings.xScale, drawSettings.yScale);\n}\n\nfunction restoreContext(drawSettings) {\n  drawSettings.context.restore();\n}\n\nclass Composite {\n  constructor() {\n    this.gameObjects = [];\n  }\n\n  //TODO these shouldn't be exposed to user, use setParent\n  addGameObject(gameObject) {\n    this.gameObjects.push(gameObject);\n  }\n\n  removeGameObject(gameObject) {\n    let index = this.gameObjects.indexOf(gameObject);\n    if (index >= 0) this.gameObjects.splice(index, 1);\n  }\n\n  //TODO do not need update/render functions here, remove from composite entirely\n  render() {}\n  update() {}\n\n  updateAll(deltaTime) {\n    this.update(deltaTime);\n    this.gameObjects.forEach(function(gameObject) {\n      gameObject.updateAll(deltaTime);\n    });\n    this.gameObjects.forEach(function(gameObject) {\n      if (gameObject.dead) {\n        gameObject.destroyNow();\n      }\n    });\n  }\n\n  /*\n  handleAllFlags() {\n    this.gameObjects.forEach(function(gameObject) {\n      if (gameObject.dead) {\n        gameObject.destroyNow();\n      }\n    });\n  }\n  */\n\n  renderAll() {\n    let currDraw = {\n      context: this.getContext(),\n\n      x: this.transform.x,\n      y: this.transform.y,\n\n      rotation: this.transform.rotation || new Degrees(0),\n\n      xScale: this.transform.xScale || 1,\n      yScale: this.transform.yScale || 1\n    };\n    updateContext(currDraw);\n\n    this.render();\n    this.gameObjects.forEach(function(gameObject) {\n      gameObject.renderAll();\n    });\n\n    restoreContext(currDraw);\n  }\n}\n\nexport { Composite };\n","import { Radians } from \"./Utilities/Angle\";\n\nconst defaults = {\n  x: 0,\n  y: 0,\n  depth: 0,\n\n  //TODO having a default as a reference object is problematic\n  //rotation: new Degrees(0),\n\n  xScale: 1,\n  yScale: 1\n};\n\nclass Transform {\n  //TODO setup anchors, base center and origin on these\n  constructor(options = {}) {\n    //TODO use position here\n    this.x = options.x || defaults.x;\n    this.y = options.y || defaults.y;\n    this.depth = options.depth || defaults.depth;\n\n    //this.rotation = options.rotation || defaults.rotation;\n    this.rotation = options.rotation || new Radians(0);\n\n    this.xScale = options.xScale || defaults.xScale;\n    this.yScale = options.yScale || defaults.yScale;\n\n    //TODO store and modify a different position class\n    //this.prevX;\n    //this.prevY;\n    this.update();\n  }\n\n  update(deltaTime) {\n    //TODO also want to keep track of absolute positions here???? many extra computations per frame\n    this.prevX = this.x;\n    this.prevY = this.y;\n  }\n\n  getCurrentDirection() {\n    let dx = this.x - this.prevX;\n    let dy = this.y - this.prevY;\n\n    return new Radians(Math.atan2(dy, dx) + Math.PI / 2);\n  }\n\n  getAngleToTransform(other) {\n    let thisCenter = this.getAbsoluteCenter();\n    let otherCenter = other.getAbsoluteCenter();\n\n    let dx = thisCenter.x - otherCenter.x;\n    let dy = thisCenter.y - otherCenter.y;\n    return Math.atan2(dy, dx) - Math.PI / 2;\n  }\n\n  getDistanceToTransform(other) {\n    let thisCenter = this.getAbsoluteCenter();\n    let otherCenter = other.getAbsoluteCenter();\n\n    return Math.sqrt(\n      Math.pow(thisCenter.x - otherCenter.x, 2) +\n        Math.pos(thisCenter.y - otherCenter.y, 2)\n    );\n  }\n\n  getAbsoluteRotation() {\n    return this.gameObject.parent.transform\n      .getAbsoluteRotation()\n      .addDegrees(this.rotation.degrees);\n  }\n\n  //TODO should use physics\n  //TODO include this with point\n  moveTo(x, y, distance) {\n    let dx = x - this.x;\n    let dy = y - this.y;\n\n    let hypotenuse = Math.sqrt(Math.pow(dx, 2) + Math.pow(dy, 2));\n    if (distance > hypotenuse) {\n      this.x = x;\n      this.y = y;\n      return true;\n    } else {\n      let angle = Math.atan2(dy, dx) + Math.PI / 2;\n      this.x += distance * Math.sin(angle);\n      this.y += distance * -Math.cos(angle);\n      return false;\n    }\n  }\n\n  setAbsoluteRotation(rotation) {\n    this.rotation = rotation.addDegrees(\n      -this.gameObject.parent.transform.getAbsoluteRotation().degrees\n    );\n  }\n\n  getAbsolutePosition(x, y) {\n    let center = this.getAbsoluteCenter();\n    let rotation = this.getAbsoluteRotation();\n    let rad = rotation.radians;\n\n    return {\n      x: center.x + x * Math.cos(rad) - y * Math.sin(rad),\n      y: center.y + x * Math.sin(rad) + y * Math.cos(rad)\n    };\n  }\n\n  getAbsoluteCenter() {\n    let parentCenter = this.gameObject.parent.transform.getAbsoluteCenter();\n    let parentRotation = this.gameObject.parent.transform.getAbsoluteRotation();\n    let rad = parentRotation.radians;\n\n    let x = this.x * this.xScale;\n    let y = this.y * this.yScale;\n\n    return {\n      x: parentCenter.x + x * Math.cos(rad) - y * Math.sin(rad),\n      y: parentCenter.y + x * Math.sin(rad) + y * Math.cos(rad)\n    };\n  }\n\n  //TODO handle scale, reference above\n  setAbsoluteCenter(center) {\n    let parentCenter = this.gameObject.parent.transform.getAbsoluteCenter();\n    let parentRotation = this.gameObject.parent.transform.getAbsoluteRotation();\n    let rad = new Radians(-parentRotation.radians).radians; // negative to negate rotation\n\n    center.x -= parentCenter.x;\n    center.y -= parentCenter.y;\n\n    this.x = center.x * Math.cos(rad) - center.y * Math.sin(rad);\n    this.y = center.x * Math.sin(rad) + center.y * Math.cos(rad);\n  }\n}\n\nclass CanvasTransform extends Transform {\n  constructor(domCanvas) {\n    super();\n\n    this.width = domCanvas.width;\n    this.height = domCanvas.height;\n\n    this.x = this.width / 2;\n    this.y = this.height / 2;\n  }\n\n  getAbsoluteCenter() {\n    return {\n      x: 0,\n      y: 0\n    };\n  }\n\n  getAbsoluteRotation() {\n    return new Radians(0);\n  }\n}\n\nexport { Transform, CanvasTransform };\n","import { Composite } from \"./Composite\";\nimport { CanvasTransform } from \"./Transform\";\n\nclass StaticCanvas extends Composite {\n  constructor(domCanvas, load = [], start = () => {}) {\n    super();\n\n    this.ctx = domCanvas.getContext(\"2d\");\n\n    this.transform = new CanvasTransform(domCanvas);\n\n    //TODO this should be handled as part of scene class\n    Promise.all(load).then(() => {\n      start(this);\n    });\n  }\n\n  clear() {\n    this.ctx.clearRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);\n  }\n\n  getCanvas() {\n    return this;\n  }\n\n  getContext() {\n    return this.ctx;\n  }\n\n  //TODO this wont work when objects are added to the composites directly\n  addGameObject(gameObject) {\n    super.addGameObject(gameObject);\n    this.clear();\n    console.log(this);\n    this.renderAll();\n  }\n}\n\nclass Canvas extends Composite {\n  constructor(domCanvas) {\n    super();\n    //TODO probably dont need to reference game here, just handle canvases from the game itself\n    //this.game = game;\n    //this.scene = scene;\n    this.ctx = domCanvas.getContext(\"2d\");\n\n    this.transform = new CanvasTransform(domCanvas);\n\n    //this.prevTime;\n\n    //let self = this;\n    //window.requestAnimationFrame(function(currTime) {\n    //  self.gameLoop(currTime);\n    //});\n  }\n\n  clear() {\n    this.ctx.clearRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);\n  }\n\n  //TODO move this out of this class (game class?)\n  //TODO handle static canvas\n  gameLoop(currTime) {\n    if (!this.prevTime) this.prevTime = currTime;\n    let deltaTime = (currTime - this.prevTime) / 1000;\n    this.prevTime = currTime;\n\n    this.clear();\n    this.updateAll(deltaTime);\n    this.renderAll();\n\n    let self = this;\n    window.requestAnimationFrame(function(currTime) {\n      self.gameLoop(currTime);\n    });\n  }\n\n  getScene() {\n    return this.scene;\n  }\n\n  getCanvas() {\n    return this;\n  }\n\n  getContext() {\n    return this.ctx;\n  }\n}\n\nexport { Canvas, StaticCanvas };\n","import { Composite } from \"./Composite\";\nimport { Transform } from \"./Transform\";\n\nclass GameObject extends Composite {\n  constructor(parent, transform = {}, components = []) {\n    super();\n\n    // flags\n    //TODO use underscore?\n    this.active = true;\n    this.dead = false;\n    //this.dirty = false;\n\n    this.transform = new Transform(transform);\n    this.transform.gameObject = this;\n\n    this.components = [];\n    for (let i = 0; i < components.length; i++) {\n      this.addComponent(components[i]);\n    }\n\n    this.setParent(parent);\n  }\n\n  // mark for destroy, to be called at end of update\n  destroy() {\n    this.dead = true;\n  }\n\n  destroyNow() {\n    this.components.forEach(function(component) {\n      component.onDestroy();\n    });\n    this.parent.removeGameObject(this);\n  }\n\n  addComponent(component) {\n    component.gameObject = this;\n    this.components.push(component);\n  }\n\n  removeComponent(component) {\n    //TODO use dead flag???\n    let index = this.components.indexOf(component);\n    this.components.splice(index, 1);\n  }\n\n  render() {\n    if (!this.active) return;\n    this.components.forEach(function(component) {\n      component.render();\n    });\n  }\n  update(deltaTime) {\n    if (!this.active) return;\n    this.transform.update(deltaTime);\n    this.components.forEach(function(component) {\n      component.update(deltaTime);\n    });\n  }\n\n  setActive(active) {\n    this.active = active;\n    //if (active) {\n    //  this.render();\n    //}\n  }\n\n  setParent(parent, maintainAbsolutePosition) {\n    let prevCenter;\n    if (this.parent) {\n      if (maintainAbsolutePosition) {\n        prevCenter = this.transform.getAbsoluteCenter();\n      }\n\n      this.parent.removeGameObject(this);\n    }\n    this.parent = parent;\n    parent.addGameObject(this);\n\n    //TODO should also make these changes to rotation, scale etc\n    if (maintainAbsolutePosition) {\n      this.transform.setAbsoluteCenter(prevCenter);\n    }\n  }\n\n  getScene() {\n    return this.parent.getScene();\n  }\n\n  getCanvas() {\n    return this.parent.getCanvas();\n  }\n\n  getContext() {\n    return this.parent.getContext();\n  }\n}\n\nexport { GameObject };\n","class Component {\n  //TODO find a simple way to pass update/render functions in?\n\n  //TODO handleInput()?\n  update(deltaTime) {}\n  render() {}\n\n  onDestroy() {}\n}\n\nexport { Component };\n","class Scene {\r\n  constructor(canvases, assets, start) {\r\n    //this.canvases = canvases || [];\r\n    this.canvases = [];\r\n    for (let canvas of canvases) {\r\n      this.addCanvas(canvas);\r\n    }\r\n\r\n    this.assets = assets || new Assets();\r\n\r\n    this.start = start;\r\n  }\r\n\r\n  addAssets(key, asset) {\r\n    this.assets.key = asset;\r\n  }\r\n\r\n  addCanvas(canvas) {\r\n    canvas.scene = this;\r\n    this.canvases.push(canvas);\r\n  }\r\n\r\n  //TODO handle gameloop from here\r\n  load() {\r\n    this.assets.load.then(() => {\r\n      console.log(this);\r\n      this.start();\r\n      window.requestAnimationFrame(currTime => {\r\n        for (let canvas of this.canvases) {\r\n          canvas.gameLoop(currTime);\r\n        }\r\n      });\r\n    });\r\n  }\r\n}\r\n\r\nclass Assets {\r\n  constructor(assets = {}) {\r\n    this.assets = assets;\r\n\r\n    this.load = new Promise(resolve => {\r\n      let assets = [];\r\n      for (let asset in this.assets) {\r\n        assets.push(this.assets[asset].load);\r\n      }\r\n      Promise.all(assets).then(resolve);\r\n    });\r\n  }\r\n\r\n  /*\r\n  async load() {\r\n    return new Promise(resolve => {\r\n      let assets = [];\r\n      for (let asset in this.assets) {\r\n        assets.push(this.assets[asset].load);\r\n      }\r\n      Promise.all(assets).then(resolve);\r\n    });\r\n  }\r\n  */\r\n\r\n  get(key) {\r\n    return this.assets[key];\r\n  }\r\n}\r\n\r\nexport { Scene, Assets };\r\n","import { Component } from \"../Component\";\n\nfunction recalculateIndex(image) {\n  image._framesPerRow = image.width === 0 ? 1 : image.image.width / image.width;\n  if (image.frameIndex >= image.numberOfFrames) image.frameIndex = 0;\n  image._xIndex = (image.frameIndex + image.xIndexStart) % image._framesPerRow;\n  image._yIndex =\n    image.yIndexStart +\n    Math.floor((image.xIndexStart + image.frameIndex) / image._framesPerRow);\n}\n\nfunction getWeightedIndex(arr) {\n  let random = Math.random();\n  let prevTotal = 0;\n  for (let i = 0; i < arr.length; i++) {\n    if (random < arr[i] + prevTotal) {\n      return i;\n    }\n    prevTotal += arr[i];\n  }\n  return -1;\n}\n\n//TODO use symbols??\nconst types = {\n  default: \"default\",\n  tiled: \"tiled\",\n  stretched: \"stretched\",\n  randomTiled: \"randomTiled\"\n};\n\nclass Image extends Component {\n  constructor(options = {}) {\n    super();\n\n    this.image = new window.Image();\n\n    this.type = types.default;\n\n    this.ticksPerFrame = 0;\n    this.numberOfFrames = 1;\n\n    this._xIndex = 0;\n    this._yIndex = 0;\n    this.xIndexStart = 0;\n    this.yIndexStart = 0;\n    this._framesPerRow = 1; //TODO this needs a better default\n\n    this.loop = true;\n    this.onFinish = function() {};\n\n    // these are for random tiling\n    this.xWeight = [1];\n    this.yWeight = [1];\n\n    this.frameIndex = 0;\n    this.tickCount = 0;\n\n    this.updateOptions(options);\n\n    //TODO reverse this naming\n    this.width = this.width || this.image.width;\n    this.height = this.height || this.image.height;\n    this.destWidth = this.destWidth || this.width;\n    this.destHeight = this.destHeight || this.height;\n  }\n\n  updateOptions(options = {}) {\n    // checking for undefined to account for 0 values\n    if (options.image !== undefined) this.image = options.image;\n\n    if (options.type !== undefined) this.type = options.type;\n\n    //TODO could generlize below, but not above. override?\n    if (options.width !== undefined) this.width = options.width;\n    if (options.height !== undefined) this.height = options.height;\n\n    if (options.destWidth !== undefined) this.destWidth = options.destWidth;\n    if (options.destHeight !== undefined) this.destHeight = options.destHeight;\n\n    if (options.xWeight !== undefined) this.xWeight = options.xWeight;\n    if (options.yWeight !== undefined) this.yWeight = options.yWeight;\n\n    if (options.ticksPerFrame !== undefined)\n      this.ticksPerFrame = options.ticksPerFrame;\n    if (options.numberOfFrames !== undefined)\n      this.numberOfFrames = options.numberOfFrames;\n\n    if (options.startingColumn !== undefined)\n      this.xIndexStart = options.startingColumn;\n    if (options.startingRow !== undefined)\n      this.yIndexStart = options.startingRow;\n\n    if (options.loop !== undefined) this.loop = options.loop;\n    if (options.onFinish !== undefined) this.onFinish = options.onFinish;\n\n    if (options.frameIndex !== undefined) this.frameIndex = options.frameIndex;\n    if (options.tickCount !== undefined) this.tickCount = options.tickCount;\n\n    recalculateIndex(this);\n  }\n\n  update(deltaTime) {\n    this.tickCount++;\n    if (this.tickCount > this.ticksPerFrame) {\n      this.tickCount = 0;\n      //let currentFrame = this.frameIndex(this.xIndex, this.yIndex);\n      //let startingFrame = this.frameIndex(this.xIndexStart, this.yIndexStart);\n      //let processedFrames = currentFrame - startingFrame;\n      if (this.frameIndex < this.numberOfFrames - 1) {\n        this.frameIndex++;\n        this._xIndex++;\n        if (this._xIndex >= this._framesPerRow) {\n          this._xIndex = 0;\n          this._yIndex++;\n        }\n      } else if (this.loop) {\n        this.frameIndex = 0;\n        this._xIndex = this.xIndexStart;\n        this._yIndex = this.yIndexStart;\n      } else {\n        this.onFinish(this);\n      }\n    }\n  }\n\n  render() {\n    let destWidth = this.destWidth === undefined ? this.width : this.destWidth;\n    let destHeight =\n      this.destHeight === undefined ? this.height : this.destHeight;\n    //console.log(this.image);\n    if (this.type === types.stretched) {\n      this.gameObject\n        .getContext()\n        .drawImage(\n          this.image,\n          this._xIndex * this.width,\n          this._yIndex * this.height,\n          this.width,\n          this.height,\n          -destWidth / 2,\n          -destHeight / 2,\n          destWidth,\n          destHeight\n        );\n    } else if (this.type === types.tiled) {\n      //TODO this wont be bounded correctly\n      let currTileX = -destWidth / 2;\n      let endTileX = destWidth / 2;\n\n      let endTileY = destHeight / 2;\n      while (currTileX < endTileX) {\n        let currTileY = -destHeight / 2;\n        while (currTileY < endTileY) {\n          this.gameObject\n            .getContext()\n            .drawImage(\n              this.image,\n              this._xIndex * this.width,\n              this._yIndex * this.height,\n              this.width,\n              this.height,\n              currTileX,\n              currTileY,\n              this.width,\n              this.height\n            );\n\n          currTileY += this.height;\n        }\n        currTileX += this.width;\n      }\n    } else if (this.type === types.randomTiled) {\n      let numTilesX = this.xWeight.length;\n      let numTilesY = this.yWeight.length;\n\n      let tileWidth = this.width / numTilesX;\n      let tileHeight = this.height / numTilesY;\n\n      //TODO this wont be bounded correctly\n      let currTileX = -destWidth / 2;\n      let endTileX = destWidth / 2;\n\n      let endTileY = destHeight / 2;\n      while (currTileX < endTileX) {\n        let currTileY = -destHeight / 2;\n        while (currTileY < endTileY) {\n          let xRandom = getWeightedIndex(this.xWeight);\n          let yRandom = getWeightedIndex(this.yWeight);\n\n          let xTile = this._xIndex * this.width + xRandom * tileWidth;\n          let yTile = this._yIndex * this.height + yRandom * tileHeight;\n\n          this.gameObject\n            .getContext()\n            .drawImage(\n              this.image,\n              xTile,\n              yTile,\n              tileWidth,\n              tileHeight,\n              currTileX,\n              currTileY,\n              tileWidth,\n              tileHeight\n            );\n\n          currTileY += tileHeight;\n        }\n        currTileX += tileWidth;\n      }\n    } else {\n      // default\n      //TODO currently just draws at source size, may need to bound?\n      this.gameObject\n        .getContext()\n        .drawImage(\n          this.image,\n          this._xIndex * this.width,\n          this._yIndex * this.height,\n          this.width,\n          this.height,\n          -this.width / 2,\n          -this.height / 2,\n          this.width,\n          this.height\n        );\n    }\n  }\n}\n\nImage.types = types;\n\nexport { Image };\n","import { Component } from \"../Component\";\n\n//TODO also want vector (angle + speed), consolidate this with physics\n//TODO make vector and coodinates interchangable\nclass SimplePhysics extends Component {\n  constructor(options = {}) {\n    super();\n\n    this.xv = options.xv || 0;\n    this.yv = options.yv || 0;\n  }\n\n  update(deltaTime) {\n    this.gameObject.transform.x += this.xv;\n    this.gameObject.transform.y += this.yv;\n  }\n}\n\nexport { SimplePhysics };\n","import { Component } from \"../Component\";\n\nclass Polygon extends Component {\n  constructor(options) {\n    super();\n\n    this.vertOffset = [];\n\n    this.updateOptions(options);\n  }\n\n  updateOptions(opts) {\n    //TODO strokestyle\n\n    opts.radius = opts.radius || 10;\n    opts.vert = opts.vert || 0;\n    opts.jaggedness = opts.jaggedness || 0;\n\n    opts.strokeStyle = opts.strokeStyle || \"black\";\n    opts.fillStyle = opts.fillStyle || \"transparent\";\n\n    this.options = opts;\n\n    this.vertOffset = [];\n    for (let i = 0; i < opts.vert; i++) {\n      this.vertOffset.push(\n        Math.random() * opts.jaggedness * 2 + 1 - opts.jaggedness\n      );\n    }\n  }\n\n  render() {\n    //TODO cache with dirty flag\n    let ctx = this.gameObject.getContext();\n\n    ctx.save();\n    ctx.strokeStyle = this.options.strokeStyle;\n    ctx.fillStyle = this.options.fillStyle;\n\n    ctx.beginPath();\n    if (this.options.vert <= 0) {\n      ctx.arc(0, 0, this.options.radius, 0, Math.PI * 2);\n    } else {\n      ctx.moveTo(\n        this.options.radius *\n          this.vertOffset[0] *\n          Math.cos(this.gameObject.transform.rotation.degrees),\n        this.options.radius *\n          this.vertOffset[0] *\n          Math.sin(this.gameObject.transform.rotation.degrees)\n      );\n      for (let i = 1; i < this.options.vert; i++) {\n        ctx.lineTo(\n          this.options.radius *\n            this.vertOffset[i] *\n            Math.cos(\n              this.gameObject.transform.rotation.degrees +\n                (i * Math.PI * 2) / this.options.vert\n            ),\n          this.options.radius *\n            this.vertOffset[i] *\n            Math.sin(\n              this.gameObject.transform.rotation.degrees +\n                (i * Math.PI * 2) / this.options.vert\n            )\n        );\n      }\n      ctx.closePath();\n    }\n    ctx.stroke();\n    ctx.fill();\n    ctx.restore();\n  }\n}\n\nexport { Polygon };\n","import { Component } from \"../Component\";\n\nclass Rectangle extends Component {\n  constructor(options) {\n    super();\n\n    this.height = options.height;\n    this.width = options.width;\n  }\n\n  render() {\n    let ctx = this.gameObject.getContext();\n    ctx.fillRect(-this.width / 2, -this.height / 2, this.width, this.height);\n  }\n}\n\nexport { Rectangle };\n","import { Component } from \"../Component\";\nimport { Degrees } from \"../Utilities/Angle\";\n\nclass Physics extends Component {\n  constructor(options = {}) {\n    super();\n\n    //TODO use position type\n    this.angle = options.angle || new Degrees(0);\n    this.speed = options.speed || 0;\n\n    this.distanceTraveled = 0;\n    this.maxDistance = options.maxDistance || Infinity;\n    this.callback =\n      options.callback ||\n      (() => {\n        this.gameObject.destroy();\n      });\n  }\n\n  update(deltaTime) {\n    let xv = this.speed * Math.sin(this.angle.radians);\n    let yv = this.speed * -Math.cos(this.angle.radians);\n\n    this.gameObject.transform.x += xv;\n    this.gameObject.transform.y += yv;\n\n    // this wont account for boundaries or other forces\n    this.distanceTraveled += this.speed;\n    console.log(this.distanceTraveled + \">=\" + this.maxDistance);\n    if (this.distanceTraveled >= this.maxDistance) {\n      this.callback();\n    }\n  }\n}\n\nexport { Physics };\n","import { Component } from \"../Component\";\nimport { Degrees } from \"../Utilities/Angle\";\n\n//TODO could be a subcomponent of physics??\nclass Acceleration extends Component {\n  constructor(physics, options = {}) {\n    super();\n\n    this.physics = physics;\n\n    this.active = options.active || true;\n    //TODO vector class\n    this.angle = options.angle || new Degrees(0);\n    this.accel = options.accel || 0;\n    //TODO rename to drag\n    this.friction = options.friction || 0;\n  }\n\n  update(deltaTime) {\n    if (this.active) {\n      this.physics.xv += this.accel * Math.sin(this.angle.radians);\n      this.physics.yv += this.accel * -Math.cos(this.angle.radians);\n    } else {\n      //TODO this friction value is affected for side to side even for down friction\n      this.physics.xv -= this.physics.xv * this.friction;\n      this.physics.yv -= this.physics.yv * this.friction;\n    }\n  }\n}\n\nexport { Acceleration };\n","import { Component } from \"../Component\";\n\nclass Hitcircle extends Component {\n  constructor(options) {\n    super();\n\n    this.radius = options.radius || 10;\n\n    //TODO generalize this behavior in a superclass\n    this.hurtboxes = options.hurtboxes || [];\n    this.hitboxSet = options.hitboxSet || [];\n\n    this.onCollision = options.onCollision || function() {};\n    this.onCollisionEnter = options.onCollisionEnter || function() {};\n    this.onCollisionExit = options.onCollisionExit || function() {};\n\n    this.collidingWith = [];\n\n    this.hitboxSet.push(this);\n  }\n\n  update(deltaTime) {\n    let num = this.hurtboxes.length;\n    for (let i = 0; i < num; i++) {\n      let hurtbox = this.hurtboxes[i];\n      //TODO maybe use a hash, not array\n      let collidingWithIndex = this.collidingWith.indexOf(hurtbox);\n      let prevColliding = collidingWithIndex >= 0;\n      if (hurtbox.collidingWithHitcircle(this)) {\n        if (!prevColliding) {\n          this.collidingWith.push(hurtbox);\n          this.onCollisionEnter(hurtbox);\n        }\n        this.onCollision(hurtbox);\n      } else {\n        if (prevColliding) {\n          this.collidingWith.splice(collidingWithIndex, 1);\n          this.onCollisionExit(hurtbox);\n        }\n      }\n    }\n  }\n\n  onDestroy() {\n    let index = this.hitboxSet.indexOf(this);\n    this.hitboxSet.splice(index, 1);\n  }\n\n  //TODO handle rotation??\n  collidingWithHitbox(hitbox) {\n    let thisCenter = this.gameObject.transform.getAbsoluteCenter();\n    let hitboxCenter = hitbox.gameObject.transform.getAbsoluteCenter();\n    if (thisCenter.x < hitboxCenter.x - hitbox.width / 2 - this.radius)\n      return false;\n    if (thisCenter.x > hitboxCenter.x + hitbox.width / 2 + this.radius)\n      return false;\n    if (thisCenter.y < hitboxCenter.y - hitbox.height / 2 - this.radius)\n      return false;\n    if (thisCenter.y > hitboxCenter.y + hitbox.height / 2 + this.radius)\n      return false;\n\n    return true;\n  }\n\n  collidingWithHitcircle(hitcircle) {\n    let thisCenter = this.gameObject.transform.getAbsoluteCenter();\n    let hitcircleCenter = hitcircle.gameObject.transform.getAbsoluteCenter();\n    let distanceBetween = Math.sqrt(\n      Math.pow(thisCenter.x - hitcircleCenter.x, 2) +\n        Math.pow(thisCenter.y - hitcircleCenter.y, 2)\n    );\n    return distanceBetween < this.radius + hitcircle.radius;\n  }\n\n  clearCollisions() {\n    this.collidingWith = [];\n  }\n}\n\nexport { Hitcircle };\n","import { Component } from \"../Component\";\n\nclass Hitbox extends Component {\n  constructor(options) {\n    super();\n\n    this.width = options.width || 10;\n    this.height = options.height || 10;\n\n    //TODO generalize this behavior in a superclass\n    this.hurtboxes = options.hurtboxes || [];\n    this.hitboxSet = options.hitboxSet || [];\n\n    this.onCollision = options.onCollision || function() {};\n    this.onCollisionEnter = options.onCollisionEnter || function() {};\n    this.onCollisionExit = options.onCollisionExit || function() {};\n\n    this.collidingWith = [];\n\n    this.hitboxSet.push(this);\n  }\n\n  update(deltaTime) {\n    let num = this.hurtboxes.length;\n    for (let i = 0; i < num; i++) {\n      let hurtbox = this.hurtboxes[i];\n      //TODO maybe use a hash, not array\n      let collidingWithIndex = this.collidingWith.indexOf(hurtbox);\n      let prevColliding = collidingWithIndex >= 0;\n      if (hurtbox.collidingWithHitbox(this)) {\n        if (!prevColliding) {\n          this.collidingWith.push(hurtbox);\n          this.onCollisionEnter(hurtbox);\n        }\n        this.onCollision(hurtbox);\n      } else {\n        if (prevColliding) {\n          this.collidingWith.splice(collidingWithIndex, 1);\n          this.onCollisionExit(hurtbox);\n        }\n      }\n    }\n  }\n\n  onDestroy() {\n    let index = this.hitboxSet.indexOf(this);\n    this.hitboxSet.splice(index, 1);\n  }\n\n  //TODO handle rotation?? use absoluteposition(x,y)\n  collidingWithHitbox(hitbox) {\n    let thisCenter = this.gameObject.transform.getAbsoluteCenter();\n    let hitboxCenter = hitbox.gameObject.transform.getAbsoluteCenter();\n    if (thisCenter.x < hitboxCenter.x - hitbox.width / 2 - this.width / 2)\n      return false;\n    if (thisCenter.x > hitboxCenter.x + hitbox.width / 2 + this.width / 2)\n      return false;\n    if (thisCenter.y < hitboxCenter.y - hitbox.height / 2 - this.height / 2)\n      return false;\n    if (thisCenter.y > hitboxCenter.y + hitbox.height / 2 + this.height / 2)\n      return false;\n\n    return true;\n  }\n\n  collidingWithHitcircle(hitcircle) {\n    let thisCenter = this.gameObject.transform.getAbsoluteCenter();\n    let hitcircleCenter = hitcircle.gameObject.transform.getAbsoluteCenter();\n    if (thisCenter.x < hitcircleCenter.x - hitcircle.radius - this.width / 2)\n      return false;\n    if (thisCenter.x > hitcircleCenter.x + hitcircle.radius + this.width / 2)\n      return false;\n    if (thisCenter.y < hitcircleCenter.y - hitcircle.radius - this.height / 2)\n      return false;\n    if (thisCenter.y > hitcircleCenter.y + hitcircle.radius + this.height / 2)\n      return false;\n\n    return true;\n  }\n\n  clearCollisions() {\n    this.collidingWith = [];\n  }\n}\n\nexport { Hitbox };\n","import { Component } from \"../Component\";\n\nconst DEFAULT = {\n  text: \"\",\n  textAlign: \"center\",\n  textBaseline: \"middle\",\n  fillStyle: \"black\",\n  font: \"12px serif\"\n};\n\nclass Text extends Component {\n  constructor(options) {\n    super();\n\n    this.text = options.text || DEFAULT.text;\n\n    this.textAlign = options.textAlign || DEFAULT.textAlign;\n    this.textBaseline = options.textBaseline || DEFAULT.textBaseline;\n    this.fillStyle = options.fillStyle || DEFAULT.fillStyle;\n    this.font = options.font || DEFAULT.font;\n  }\n\n  render() {\n    let ctx = this.gameObject.getContext();\n\n    ctx.save();\n    ctx.font = this.font;\n    ctx.fillStyle = this.fillStyle;\n    ctx.textAlign = this.textAlign;\n    ctx.textBaseline = this.textBaseline;\n\n    ctx.fillText(this.text, 0, 0);\n    ctx.restore();\n  }\n}\n\nexport { Text };\n","import { Component } from \"../Component\";\n\n//TODO maybe dont make audio a component??\nclass Audio extends Component {\n  constructor(options = {}) {\n    super();\n\n    this.audio = new window.Audio();\n\n    this.audio.volume = options.volume || 1;\n  }\n\n  play(clip) {\n    //TODO this is causing problems when multiple monster are getting hit at once\n    this.audio.src = clip;\n    this.audio.currentTime = 0;\n    this.audio.play();\n  }\n}\n\nexport { Audio };\n","import { Radians } from \"./Angle\";\n\nfunction recalculateVector(position) {\n  position._angle.radians = Math.atan2(position._y, position._x) + Math.PI / 2;\n  position._magnitude = Math.sqrt(\n    Math.pow(position._x, 2) + Math.pow(position._y, 2)\n  );\n  position._dirtyVector = false;\n}\nfunction recalculateCoordinates(position) {\n  position._x = Math.sin(position._angle.radians) * position._magnitude;\n  position._y = -Math.cos(position._angle.radians) * position._magnitude;\n  position._dirtyCoordinates = false;\n  position._prevRadians = position._angle.radians;\n}\n\nclass Position {\n  constructor() {\n    this._x;\n    this._y;\n\n    this._angle = new Radians(0);\n    this._magnitude;\n\n    this._dirtyCoordinates;\n    this._dirtyVector;\n    this._prevRadians = this._angle.radians;\n  }\n\n  add(position) {\n    this.x += position.x;\n    this.y += position.y;\n  }\n\n  //TODO need to check if angle is dirty too\n  get x() {\n    if (this._dirtyCoordinates || this._angle.radians != this._prevRadians) {\n      recalculateCoordinates(this);\n    }\n    return this._x;\n  }\n  set x(x) {\n    this._x = x;\n    this._dirtyVector = true;\n  }\n\n  get y() {\n    if (this._dirtyCoordinates || this._angle.radians != this._prevRadians) {\n      recalculateCoordinates(this);\n    }\n    return this._y;\n  }\n  set y(y) {\n    this._y = y;\n    this._dirtyVector = true;\n  }\n\n  get angle() {\n    if (this._dirtyVector) {\n      recalculateVector(this);\n    }\n    return this._angle;\n  }\n  set angle(angle) {\n    this._angle = angle;\n    this._dirtyCoordinates = true;\n  }\n\n  get magnitude() {\n    if (this._dirtyVector) {\n      recalculateVector(this);\n    }\n    return this._magnitude;\n  }\n  set magnitude(magnitude) {\n    this._magnitude = magnitude;\n    this._dirtyCoordinates = true;\n  }\n\n  static get UNIT_LEFT() {\n    return UNIT_LEFT;\n  }\n  static get UNIT_RIGHT() {\n    return UNIT_RIGHT;\n  }\n  static get UNIT_UP() {\n    return UNIT_UP;\n  }\n  static get UNIT_DOWN() {\n    return UNIT_DOWN;\n  }\n}\n\n//TODO defaults, including zero angle\nclass Coordinates extends Position {\n  constructor(x, y) {\n    super();\n    this._x = x;\n    this._y = y;\n    this._dirtyVector = true;\n  }\n}\n\nclass Vector extends Position {\n  constructor(angle, magnitude) {\n    super();\n    this._angle = angle;\n    this._magnitude = magnitude;\n    this._dirtyCoordinates = true;\n  }\n}\n\nconst UNIT_LEFT = new Coordinates(-1, 0);\nconst UNIT_RIGHT = new Coordinates(1, 0);\nconst UNIT_UP = new Coordinates(0, -1);\nconst UNIT_DOWN = new Coordinates(0, 1);\n\nexport { Coordinates, Vector };\n","//TODO refactor this to have \"up, down, etc\" and check all the inputs\n\nclass Input {\n  constructor(canvas, options, handler) {\n    this.canvas = canvas;\n\n    this.activeInputs = {};\n    this.registeredInputs = {};\n\n    Object.keys(options).forEach(command => {\n      this.activeInputs[command] = false;\n      this.registerCommand(command, options[command]);\n    });\n\n    document.addEventListener(\"keydown\", event => {\n      if (this.registeredInputs[event.keyCode]) {\n        event.preventDefault();\n        if (event.repeat) return;\n        this.activeInputs[this.registeredInputs[event.keyCode]] = true;\n        handler(this.activeInputs);\n      }\n    });\n    document.addEventListener(\"keyup\", event => {\n      if (this.registeredInputs[event.keyCode]) {\n        event.preventDefault();\n        this.activeInputs[this.registeredInputs[event.keyCode]] = false;\n        handler(this.activeInputs);\n      }\n    });\n\n    //TODO have to redo mouse handlers\n    /*\n    if (mouseMoveHandler) {\n      document.onmousemove = event => {\n        //TODO hardcoded, need reference stored\n        //let rect = engine.canvases\n        //.get(\"canvas\")\n        let rect = this.canvas.ctx.canvas.getBoundingClientRect();\n        //console.log(engine.canvases.get(\"canvas\"));\n        mouseMoveHandler({\n          x:\n            event.clientX -\n            Math.round(rect.left - 0.5) -\n            this.canvas.transform.x,\n          y:\n            event.clientY - Math.round(rect.top - 0.5) - this.canvas.transform.y\n        });\n      };\n    }\n    */\n    //TODO maybe input should be tied to canvas?\n    /*\n    if (mouseClickHandler) {\n      //TODO bind this to not effect the whole document?\n      document.body.addEventListener(\"click\", event => {\n        //TODO hardcoded, need reference stored\n        //let rect = engine.canvases\n        //.get(\"canvas\")\n        let rect = this.canvas.ctx.canvas.getBoundingClientRect();\n        mouseClickHandler({\n          x:\n            event.clientX -\n            Math.round(rect.left - 0.5) -\n            this.canvas.transform.x,\n          y:\n            event.clientY - Math.round(rect.top - 0.5) - this.canvas.transform.y\n        });\n      });\n    }\n    */\n\n    //TODO maybe have an option to remove this, will need to store function names\n    /*\n        return {\n            remove: function() {\n                document.removeEventListener(\"keydown\", name);\n                document.removeEventListener(\"keyup\", name);\n            }\n        };\n        */\n  }\n  //TODO bool to handle mouse?\n\n  //TODO maybe allow more params here, interruptable, cancellable\n  //TODO maybe allow some granularity in here, defined additional categories by objects\n  registerCommand(command, keycode) {\n    if (Array.isArray(keycode)) {\n      keycode.forEach(function(key) {\n        registerCommand(command, key);\n      });\n    } else {\n      this.registeredInputs[keycode] = command;\n    }\n  }\n}\n\nexport { Input };\n","//TODO maybe just constantly maintain all possible keyboard inputs (like mouse)\nclass Keyboard {\n  //TODO consolidate these\n  constructor(options, onKeyDown = {}, onKeyUp = {}) {\n    this.activeInputs = {};\n    this.registeredInputs = {};\n\n    this.onKeyDown = onKeyDown;\n    this.onKeyUp = onKeyUp;\n\n    Object.keys(options).forEach(keyCode => {\n      this.activeInputs[options[keyCode]] = false;\n      this.registerCommand(keyCode, options[keyCode]);\n    });\n\n    document.addEventListener(\"keydown\", event => {\n      if (this.registeredInputs[event.keyCode]) {\n        event.preventDefault();\n        if (event.repeat) return;\n        this.activeInputs[this.registeredInputs[event.keyCode]] = true;\n        //handler(this.activeInputs);\n      }\n      if (this.onKeyDown[event.keyCode]) {\n        event.preventDefault();\n        if (event.repeat) return;\n        this.onKeyDown[event.keyCode]();\n      }\n    });\n    document.addEventListener(\"keyup\", event => {\n      if (this.registeredInputs[event.keyCode]) {\n        event.preventDefault();\n        this.activeInputs[this.registeredInputs[event.keyCode]] = false;\n        //handler(this.activeInputs);\n      }\n      if (this.onKeyUp[event.keyCode]) {\n        event.preventDefault();\n        this.onKeyUp[event.keyCode]();\n      }\n    });\n\n    //console.log(this.registeredInputs);\n    //console.log(this.activeInputs);\n    return this.activeInputs;\n  }\n\n  //TODO maybe allow more params here, interruptable, cancellable\n  //TODO maybe allow some granularity in here, defined additional categories by objects\n  registerCommand(keycode, command) {\n    if (Array.isArray(keycode)) {\n      keycode.forEach(function(key) {\n        registerCommand(command, key);\n      });\n    } else {\n      this.registeredInputs[keycode] = command;\n    }\n  }\n}\n\nexport { Keyboard };\n","class Mouse {\n  constructor(canvas, onLeftClick, onRightClick) {\n    this.canvas = canvas;\n    //TODO these should be readonly\n    this.x = 0;\n    this.y = 0;\n    //this.leftClick;\n\n    //TODO handle middle and right click\n    //TODO handle scroll wheel\n\n    document.addEventListener(\"mousemove\", event => {\n      let rect = this.canvas.ctx.canvas.getBoundingClientRect();\n      this.x =\n        event.clientX - Math.round(rect.left - 0.5) - this.canvas.transform.x;\n      this.y =\n        event.clientY - Math.round(rect.top - 0.5) - this.canvas.transform.y;\n    });\n    document.addEventListener(\"mousedown\", event => {\n      this.leftClick = true;\n    });\n    document.addEventListener(\"mouseup\", event => {\n      this.leftClick = false;\n    });\n\n    if (onLeftClick) {\n      document.body.addEventListener(\"click\", event => {\n        onLeftClick(this);\n      });\n    }\n\n    if (onRightClick) {\n      document.addEventListener(\"contextmenu\", event => {\n        event.preventDefault();\n        onRightClick(this);\n      });\n    }\n  }\n}\n\nexport { Mouse };\n","/*\nclass DomImage {\n  constructor(src) {\n    this.image = new Image();\n    this.image.load = new Promise((resolve, reject) => {\n      this.image.onload(resolve);\n      this.image.onerror(reject);\n    });\n    this.image.src = src;\n  }\n\n  /*\n  load() {\n    return new Promise((resolve, reject) => {\n      console.log(this.image);\n      if (this.image.complete) {\n        resolve();\n      } else {\n        this.image.onload(resolve);\n        this.image.onerror(reject);\n      }\n    });\n  }\n  *\n}\n*/\n\nconst DomImage = function(src) {\n  let image = new window.Image();\n  image.src = src;\n  image.load = new Promise((resolve, reject) => {\n    image.onload = resolve;\n    image.onerror = reject;\n  });\n  return image;\n};\n\nexport { DomImage };\n","import { Canvas, StaticCanvas } from \"./Canvas\";\nimport { GameObject } from \"./GameObject\";\nimport { Component } from \"./Component\";\nimport { Scene, Assets } from \"./Scene\";\n\n//import { Transform } from \"./Components/Transform\";\nimport { Image } from \"./Components/Image\";\nimport { SimplePhysics } from \"./Components/SimplePhysics\";\nimport { Polygon } from \"./Components/Polygon\";\nimport { Rectangle } from \"./Components/Rectangle\";\nimport { Physics } from \"./Components/Physics\";\nimport { Acceleration } from \"./Components/Acceleration\";\nimport { Hitcircle } from \"./Components/Hitcircle\";\nimport { Hitbox } from \"./Components/Hitbox\";\nimport { Text } from \"./Components/Text\";\nimport { Audio } from \"./Components/Audio\";\n\n//import { Vector } from \"./Utilities/Vector\";\n//import { Coordinates } from \"./Utilities/Coordinates\";\nimport { Degrees, Radians } from \"./Utilities/Angle\";\nimport { Coordinates, Vector } from \"./Utilities/Position\";\n\n//TODO this needs to be totally reworked\nimport { Input } from \"./Input/Input\";\nimport { Keyboard } from \"./Input/Keyboard\";\nimport { Mouse } from \"./Input/Mouse\";\n\nimport { DomImage } from \"./Dom/Image\";\n\nlet Dna = {\n  //TODO should probably consolidate these\n  Canvas: Canvas,\n  StaticCanvas: StaticCanvas,\n  GameObject: GameObject,\n  Component: Component,\n  Scene: Scene,\n  Assets: Assets,\n  //Transform: Transform,\n\n  Components: {\n    Image: Image,\n    SimplePhysics: SimplePhysics,\n    Polygon: Polygon,\n    Rectangle: Rectangle,\n    Physics: Physics,\n    Acceleration: Acceleration,\n    Hitcircle: Hitcircle,\n    Hitbox: Hitbox,\n    Text: Text,\n    Audio: Audio\n  },\n  Utilities: {\n    Degrees: Degrees,\n    Radians: Radians,\n    Coordinates: Coordinates,\n    Vector: Vector\n  },\n  Input: {\n    Input: Input,\n    Keyboard: Keyboard,\n    Mouse: Mouse\n  },\n  Dom: {\n    Image: DomImage\n  }\n};\n\nwindow.Dna = Dna;\n"]}