{"version":3,"sources":["demos/platformer/Hero.js","demos/platformer/Boundary.js","demos/platformer/Platform.js","demos/platformer/Target.js","demos/platformer/Monster.js","demos/platformer/Zombie.js","demos/platformer/platformer.js"],"names":["SPRITE_WIDTH","SPRITE_HEIGHT","WIDTH","HEIGHT","default_sprite","width","height","heroRunImage","Image","src","heroRunSprite","hero_run","image","loop","numberOfFrames","ticksPerFrame","startingColumn","startingRow","heroImage","heroSprite","hero_idle","framesPerRow","hero_fall","hero_jump","onFinish","updateOptions","frameIndex","hero_slash","hero_slash2","gameObject","attackingPosition","addComponent","attackingHitbox","hero_slash3","removeComponent","finishAttack","SPEED","JUMP_SPEED","GRAVITY","HeroComponent","physics","input","onKeyDown","jump","keyboard","Dna","Input","Keyboard","attacking","deltaTime","x","left","right","xv","transform","xScale","grounded","attack","console","log","yv","gravity","active","Component","Hero","parent","position","enemyHurtboxes","Components","SimplePhysics","Acceleration","angle","Utilities","Degrees","DOWN","accel","hurtbox","Hitbox","GameObject","hurtboxes","onCollision","onCollisionEnter","clearCollisions","Boundary","alignment","offset","getPosition","Rectangle","hitbox","Alignments","TOP","y","radius","BOTTOM","ground","onCollisionExit","unground","LEFT","RIGHT","Platform","hurtboxOffset","yOffset","prevY","SIZE","Target","hitboxSet","AI","hero","attackRange","distance","Math","abs","move","Facing","imageObject","ZOMBIE_DEFAULT","type","types","stretched","destWidth","destHeight","girlAttackImage","girlAttackSprite","girlAttack","girlWalkImage","girlWalkSprite","girlWalk","Zombie","canvas","heroHurtbox","monsterHurtboxes","RADIUS","Canvas","document","getElementById","xy","zombie0","SHORT","X_LONG","Y_LONG","X_OFFSET","Y_OFFSET","topBoundary","bottomBoundary","leftBoundary","rightBoundary"],"mappings":"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","file":"platformer.5c1dea86.map","sourceRoot":"..","sourcesContent":["import heroSprite from \"./assets/hero/hero.png\";\nimport heroRunSprite from \"./assets/hero/hero_run.png\";\n\nconst SPRITE_WIDTH = 50;\nconst SPRITE_HEIGHT = 37;\nconst WIDTH = 20;\nconst HEIGHT = 37;\n\nlet default_sprite = {\n  width: SPRITE_WIDTH,\n  height: SPRITE_HEIGHT\n};\n\nlet heroRunImage = new Image();\nheroRunImage.src = heroRunSprite;\nlet hero_run = {\n  image: heroRunImage,\n  loop: true,\n\n  numberOfFrames: 6,\n  ticksPerFrame: 5,\n\n  startingColumn: 0,\n  startingRow: 0\n  //framesPerRow: 6\n};\nlet heroImage = new Image();\nheroImage.src = heroSprite;\nlet hero_idle = {\n  image: heroImage,\n  loop: true,\n\n  numberOfFrames: 4,\n  ticksPerFrame: 5,\n\n  startingColumn: 3,\n  startingRow: 5,\n  framesPerRow: 7\n};\n\nlet hero_fall = {\n  image: heroImage,\n  loop: true,\n  //onFinish: function() {},\n\n  numberOfFrames: 2,\n  ticksPerFrame: 5,\n\n  startingColumn: 1,\n  startingRow: 3,\n  framesPerRow: 7\n};\n\nlet hero_jump = {\n  image: heroImage,\n  loop: false,\n  onFinish: function(image) {\n    image.updateOptions(hero_fall);\n  },\n\n  numberOfFrames: 7,\n  ticksPerFrame: 3,\n\n  startingColumn: 1,\n  startingRow: 2,\n  framesPerRow: 7,\n\n  frameIndex: 0\n};\n\nlet hero_slash = {\n  image: heroImage,\n  loop: false,\n  onFinish: function(image) {\n    image.updateOptions(hero_slash2);\n    image.gameObject.attackingPosition.addComponent(\n      image.gameObject.attackingHitbox\n    );\n  },\n\n  numberOfFrames: 1,\n  ticksPerFrame: 5,\n\n  startingColumn: 1,\n  startingRow: 6,\n  framesPerRow: 7,\n\n  frameIndex: 0\n};\nlet hero_slash2 = {\n  image: heroImage,\n  loop: false,\n  onFinish: function(image) {\n    //image.gameObject.finishAttack();\n    image.updateOptions(hero_slash3);\n    image.gameObject.attackingPosition.removeComponent(\n      image.gameObject.attackingHitbox\n    );\n  },\n\n  numberOfFrames: 1,\n  ticksPerFrame: 5,\n\n  startingColumn: 2,\n  startingRow: 6,\n  framesPerRow: 7,\n\n  frameIndex: 0\n};\nlet hero_slash3 = {\n  image: heroImage,\n  loop: false,\n  onFinish: function(image) {\n    image.gameObject.finishAttack();\n  },\n\n  numberOfFrames: 2,\n  ticksPerFrame: 5,\n\n  startingColumn: 3,\n  startingRow: 6,\n  framesPerRow: 7,\n\n  frameIndex: 0\n};\n\nconst SPEED = 3;\nconst JUMP_SPEED = 12;\nconst GRAVITY = 0.5;\n\nclass HeroComponent extends Dna.Component {\n  constructor(physics) {\n    super();\n\n    //TODO handle mouse input\n    let input = {\n      //wasd\n      //up: 87,\n      //down: 83,\n      65: \"left\",\n      68: \"right\",\n      32: \"jump\",\n      17: \"attack\"\n      //left: 65,\n      //right: 68,\n      //jump: 32, // space\n      //attack: 17 // ctrl\n\n      //arrowkeys\n      //up: 38,\n      //down: 40,\n      //left: 37,\n      //right: 39,\n      //jump: 90, // z\n      //attack: 88 // x\n      //secondary: 17\n    };\n    let onKeyDown = {\n      32: () => {\n        this.jump();\n      }\n    };\n    this.keyboard = new Dna.Input.Keyboard(input, onKeyDown);\n    this.physics = physics;\n\n    this.attacking = false;\n  }\n\n  update(deltaTime) {\n    //console.log(this.gameObject.attackingHitbox);\n\n    let x = 0;\n    if (this.keyboard.left) x -= 1;\n    if (this.keyboard.right) x += 1;\n    this.physics.xv = x * SPEED;\n\n    if (x < 0) {\n      this.gameObject.transform.xScale = -1;\n    } else if (x > 0) {\n      this.gameObject.transform.xScale = 1;\n    }\n\n    if (!this.gameObject.attacking && this.gameObject.grounded) {\n      if (x == 0) {\n        this.gameObject.image.updateOptions(hero_idle);\n      } else {\n        this.gameObject.image.updateOptions(hero_run);\n      }\n    }\n\n    if (this.keyboard.attack) {\n      if (!this.gameObject.attacking) {\n        this.gameObject.attack();\n      }\n    }\n  }\n\n  jump() {\n    console.log(this);\n    if (this.gameObject.grounded) {\n      this.physics.yv = -JUMP_SPEED;\n      this.gameObject.grounded = false;\n      this.gameObject.gravity.active = true;\n      this.gameObject.image.updateOptions(hero_jump);\n    }\n  }\n}\n\nclass Hero extends Dna.GameObject {\n  constructor(parent, position, enemyHurtboxes) {\n    super(parent, position, []);\n\n    //this.grounded;\n    this.image = new Dna.Components.Image(default_sprite);\n    this.image.updateOptions(hero_idle);\n    this.addComponent(this.image);\n\n    this.physics = new Dna.Components.SimplePhysics();\n    this.addComponent(this.physics);\n\n    this.gravity = new Dna.Components.Acceleration(this.physics, {\n      angle: Dna.Utilities.Degrees.DOWN,\n      accel: GRAVITY\n    });\n    this.addComponent(this.gravity);\n\n    this.hurtbox = new Dna.Components.Hitbox({\n      width: WIDTH,\n      height: HEIGHT\n    });\n    this.addComponent(this.hurtbox);\n\n    this.addComponent(new HeroComponent(this.physics));\n\n    // this is not added to the gameObject until the attack is triggered\n    this.attackingPosition = new Dna.GameObject(this, { x: 15 });\n    this.attackingHitbox = new Dna.Components.Hitbox({\n      width: 10,\n      height: 20,\n      hurtboxes: enemyHurtboxes,\n      onCollision: hurtbox => {\n        console.log(\"attack hit!!\");\n      },\n      onCollisionEnter: hurtbox => {\n        console.log(\"enter attack hit!!\");\n      }\n    });\n  }\n\n  attack() {\n    this.attacking = true;\n    console.log(\"attacking\");\n    //this.attackingPosition.addComponent(this.attackingHitbox);\n\n    this.image.updateOptions(hero_slash);\n    console.log(hero_slash.loop);\n\n    //TODO may want to use a timeout here, instead of animation on finish\n    //setTimeout(() => {\n    //  this.gameObject.finishAttack();\n    //}, 500);\n  }\n  finishAttack() {\n    console.log(this);\n    this.attacking = false;\n    //this.attackingPosition.removeComponent(this.attackingHitbox);\n    console.log(\"finishing attack\");\n\n    //TODO this should be based on hero's current state\n    this.image.updateOptions(hero_idle);\n\n    this.attackingHitbox.clearCollisions();\n  }\n\n  ground() {\n    this.grounded = true;\n\n    this.gravity.active = false;\n    this.physics.yv = 0;\n  }\n\n  unground() {\n    this.grounded = false;\n    this.gravity.active = true;\n\n    console.log(\"unground\");\n  }\n}\n\nexport { Hero };\n","//TODO should not use hitboxes for this, doens't account for condition where unit moves past boundary in single frame\n//TODO axis-aligned bounding box\nclass Boundary extends Dna.GameObject {\n  constructor(parent, alignment, offset, width, height, hurtboxes) {\n    super(parent, alignment.getPosition(offset), [\n      new Dna.Components.Rectangle({ width: width, height: height })\n    ]);\n\n    let hitbox = new Dna.Components.Hitbox({\n      width: width,\n      height: height,\n      hurtboxes: hurtboxes,\n      onCollision: alignment.onCollision\n    });\n    this.addComponent(hitbox);\n  }\n}\n\n//TODO this offset logic is jank\nlet Alignments = {\n  TOP: {\n    getPosition: offset => {\n      return { y: offset };\n    },\n    onCollision: function(hurtbox) {\n      //TODO set absolute\n      let offset = hurtbox.radius || hurtbox.height / 2;\n      hurtbox.gameObject.transform.y =\n        this.gameObject.transform.y + this.height / 2 + offset;\n      console.log(\"collision detected\");\n    }\n  },\n  BOTTOM: {\n    getPosition: offset => {\n      return { y: offset };\n    },\n    onCollision: function(hurtbox) {\n      //TODO set absolute\n      let offset = hurtbox.radius || hurtbox.height / 2;\n      hurtbox.gameObject.transform.y =\n        this.gameObject.transform.y - this.height / 2 - offset;\n      hurtbox.gameObject.ground();\n    },\n    onCollisionExit: hurtbox => {\n      console.log(\"onCollisionExit\");\n      hurtbox.gameObject.unground();\n    }\n  },\n  LEFT: {\n    getPosition: offset => {\n      return { x: offset };\n    },\n    onCollision: function(hurtbox) {\n      //TODO set absolute\n      let offset = hurtbox.radius || hurtbox.width / 2;\n      hurtbox.gameObject.transform.x =\n        this.gameObject.transform.x + this.width / 2 + offset;\n    }\n  },\n  RIGHT: {\n    getPosition: offset => {\n      return { x: offset };\n    },\n    onCollision: function(hurtbox) {\n      //TODO set absolute\n      let offset = hurtbox.radius || hurtbox.width / 2;\n      hurtbox.gameObject.transform.x =\n        this.gameObject.transform.x - this.width / 2 - offset;\n    }\n  }\n};\n\nexport { Boundary, Alignments };\n","const WIDTH = 100;\nconst HEIGHT = 10;\n\nclass Platform extends Dna.GameObject {\n  constructor(parent, position, hurtboxes) {\n    super(parent, position, [\n      new Dna.Components.Rectangle({ width: WIDTH, height: HEIGHT })\n    ]);\n\n    let hitbox = new Dna.Components.Hitbox({\n      width: WIDTH,\n      height: HEIGHT,\n      hurtboxes: hurtboxes,\n      onCollision: function(hurtbox) {\n        let hurtboxOffset = hurtbox.radius || hurtbox.height / 2;\n        let yOffset = this.gameObject.transform.y - HEIGHT / 2 - hurtboxOffset;\n        //TODO this should be less than, but is still affected by gravity????\n        if (hurtbox.gameObject.transform.prevY <= yOffset) {\n          hurtbox.gameObject.transform.y = yOffset;\n          hurtbox.gameObject.ground();\n        }\n      },\n      onCollisionExit: hurtbox => {\n        console.log(\"onCollisionExit\");\n        hurtbox.gameObject.unground();\n      }\n    });\n    this.addComponent(hitbox);\n  }\n}\n\nexport { Platform };\n","const SIZE = 20;\n\n//TODO should have a physics component to prevent it from falling through the floor\nclass Target extends Dna.GameObject {\n  constructor(parent, position, enemyHurtboxes) {\n    super(parent, position, [\n      new Dna.Components.Rectangle({ width: SIZE, height: SIZE }),\n      new Dna.Components.Hitbox({\n        width: SIZE,\n        height: SIZE,\n        hitboxSet: enemyHurtboxes\n      })\n    ]);\n  }\n}\n\nexport { Target };\n","const SPEED = 1;\n\nclass AI extends Dna.Component {\n  constructor(hero, attackRange) {\n    super();\n\n    this.hero = hero;\n    //this.physics = physics;\n    this.attackRange = attackRange;\n\n    this.attacking = false;\n  }\n\n  update(deltaTime) {\n    let distance = this.gameObject.transform.x - this.hero.transform.x;\n    if (this.attacking) return;\n\n    if (Math.abs(distance) < this.attackRange) {\n      this.gameObject.attack();\n    } else {\n      //TODO move\n      let move = distance > 0 ? -SPEED : SPEED;\n      this.gameObject.transform.x += move;\n    }\n  }\n\n  attack() {\n    this.attacking = true;\n  }\n\n  endAttack() {\n    this.attacking = false;\n  }\n}\n\nclass Facing extends Dna.Component {\n  constructor(hero, imageObject) {\n    super();\n\n    this.hero = hero;\n    this.imageObject = imageObject;\n  }\n\n  update() {\n    //console.log(this.gameObject.transform);\n    let distance = this.gameObject.transform.x - this.hero.transform.x;\n    this.imageObject.transform.xScale = distance > 0 ? -1 : 1;\n  }\n}\n\nexport { AI, Facing };\n","import { AI, Facing } from \"./Monster\";\nimport girlAttackSprite from \"./assets/zombiegirl/attack.png\";\nimport girlDeadSprite from \"./assets/zombiegirl/dead.png\";\nimport girlIdleSprite from \"./assets/zombiegirl/idle.png\";\nimport girlWalkSprite from \"./assets/zombiegirl/walk.png\";\n\nconst ZOMBIE_DEFAULT = {\n  type: Dna.Components.Image.types.stretched,\n  width: 521,\n  height: 576,\n  ticksPerFrame: 10,\n\n  destWidth: 521 / 6,\n  destHeight: 576 / 6\n};\nlet girlAttackImage = new Image();\ngirlAttackImage.src = girlAttackSprite;\nlet girlAttack = {\n  image: girlAttackImage,\n  loop: false,\n\n  numberOfFrames: 8\n};\nlet girlWalkImage = new Image();\ngirlWalkImage.src = girlWalkSprite;\nlet girlWalk = {\n  image: girlWalkImage,\n  loop: true,\n\n  numberOfFrames: 10\n};\n\nclass Zombie extends Dna.GameObject {\n  constructor(canvas, position, hero, heroHurtbox, monsterHurtboxes) {\n    super(canvas, position, [new AI(hero, 10)]);\n\n    let image = new Dna.Components.Image(ZOMBIE_DEFAULT);\n    image.updateOptions(girlWalk);\n    let imageObject = new Dna.GameObject(this, {}, [image]);\n\n    this.addComponent(new Facing(hero, imageObject));\n  }\n\n  attack() {\n    console.log(\"attacking\");\n    //TODO change animation\n    //TODO hitboxes\n  }\n}\n\nexport { Zombie };\n","import { Hero } from \"./Hero\";\nimport { Boundary, Alignments } from \"./Boundary\";\nimport { Platform } from \"./Platform\";\nimport { Target } from \"./Target\";\nimport { Zombie } from \"./Zombie\";\n\nconst RADIUS = 20;\n\nlet canvas = new Dna.Canvas(document.getElementById(\"canvas\"));\n\nlet gravity = new Dna.Components.SimplePhysics({ xy: 5 });\n\nlet enemyHurtboxes = [];\nnew Target(canvas, { y: 225 }, enemyHurtboxes);\n\nlet hero = new Hero(canvas, {}, enemyHurtboxes);\nlet hurtboxes = [hero.hurtbox];\n\nlet zombie0 = new Zombie(canvas, {}, hero, hurtboxes, enemyHurtboxes);\n\nnew Platform(canvas, { y: 150, x: -100 }, hurtboxes);\nnew Platform(canvas, { y: 150, x: 100 }, hurtboxes);\nnew Platform(canvas, { y: 50 }, hurtboxes);\n\nconst SHORT = 10;\nconst X_LONG = 500;\nconst Y_LONG = 700;\nconst X_OFFSET = 350;\nconst Y_OFFSET = 250;\n\nlet topBoundary = new Boundary(\n  canvas,\n  Alignments.TOP,\n  -Y_OFFSET,\n  Y_LONG,\n  SHORT,\n  hurtboxes\n);\nlet bottomBoundary = new Boundary(\n  canvas,\n  Alignments.BOTTOM,\n  Y_OFFSET,\n  Y_LONG,\n  SHORT,\n  hurtboxes\n);\n\nlet leftBoundary = new Boundary(\n  canvas,\n  Alignments.LEFT,\n  -X_OFFSET,\n  SHORT,\n  X_LONG,\n  hurtboxes\n);\nlet rightBoundary = new Boundary(\n  canvas,\n  Alignments.RIGHT,\n  X_OFFSET,\n  SHORT,\n  X_LONG,\n  hurtboxes\n);\n"]}