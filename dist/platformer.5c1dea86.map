{"version":3,"sources":["demos/platformer/Hero.js","demos/platformer/Boundary.js","demos/platformer/Platform.js","demos/platformer/Target.js","demos/platformer/Monster.js","demos/platformer/Zombie.js","demos/platformer/platformer.js"],"names":["heroImage","Dna","Dom","Image","heroSprite","heroRunImage","heroRunSprite","heroAssets","Assets","hero","run","SPRITE_WIDTH","SPRITE_HEIGHT","WIDTH","HEIGHT","default_sprite","width","height","hero_run","image","loop","numberOfFrames","ticksPerFrame","startingColumn","startingRow","hero_idle","framesPerRow","hero_fall","hero_jump","onFinish","updateOptions","frameIndex","hero_slash","hero_slash2","gameObject","attackingPosition","addComponent","attackingHitbox","hero_slash3","removeComponent","finishAttack","SPEED","JUMP_SPEED","GRAVITY","HeroComponent","physics","input","onKeyDown","jump","keyboard","Input","Keyboard","attacking","deltaTime","x","left","right","xv","transform","xScale","grounded","attack","console","log","yv","gravity","active","Component","Hero","parent","position","enemyHurtboxes","Components","SimplePhysics","Acceleration","angle","Utilities","Degrees","DOWN","accel","hurtbox","Hitbox","GameObject","hurtboxes","onCollision","onCollisionEnter","clearCollisions","Boundary","alignment","offset","getPosition","Rectangle","hitbox","Alignments","TOP","y","radius","BOTTOM","ground","onCollisionExit","unground","LEFT","RIGHT","Platform","hurtboxOffset","yOffset","prevY","SIZE","Target","hitboxSet","AI","attackRange","distance","Math","abs","move","Facing","imageObject","girlAttackImage","girlAttackSprite","girlWalkImage","girlWalkSprite","zombieAssets","walk","ZOMBIE_DEFAULT","type","types","stretched","destWidth","destHeight","girlAttack","girlWalk","Zombie","canvas","heroHurtbox","monsterHurtboxes","RADIUS","Canvas","document","getElementById","start","xy","zombie0","SHORT","X_LONG","Y_LONG","X_OFFSET","Y_OFFSET","topBoundary","bottomBoundary","leftBoundary","rightBoundary","scene","Scene","zombie","load"],"mappings":"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","file":"platformer.5c1dea86.map","sourceRoot":"..","sourcesContent":["import heroSprite from \"./assets/hero/hero.png\";\nimport heroRunSprite from \"./assets/hero/hero_run.png\";\n\nlet heroImage = new Dna.Dom.Image(heroSprite);\nlet heroRunImage = new Dna.Dom.Image(heroRunSprite);\n\nlet heroAssets = new Dna.Assets({\n  hero: heroImage,\n  run: heroRunImage\n});\n\nconst SPRITE_WIDTH = 50;\nconst SPRITE_HEIGHT = 37;\nconst WIDTH = 20;\nconst HEIGHT = 37;\n\nlet default_sprite = {\n  width: SPRITE_WIDTH,\n  height: SPRITE_HEIGHT\n};\n\n//let heroRunImage = new Image();\n//heroRunImage.src = heroRunSprite;\nlet hero_run = {\n  image: heroRunImage,\n  loop: true,\n\n  numberOfFrames: 6,\n  ticksPerFrame: 5,\n\n  startingColumn: 0,\n  startingRow: 0\n  //framesPerRow: 6\n};\n//let heroImage = new Image();\n//heroImage.src = heroSprite;\nlet hero_idle = {\n  image: heroImage,\n  loop: true,\n\n  numberOfFrames: 4,\n  ticksPerFrame: 5,\n\n  startingColumn: 3,\n  startingRow: 5,\n  framesPerRow: 7\n};\n\nlet hero_fall = {\n  image: heroImage,\n  loop: true,\n  //onFinish: function() {},\n\n  numberOfFrames: 2,\n  ticksPerFrame: 5,\n\n  startingColumn: 1,\n  startingRow: 3,\n  framesPerRow: 7\n};\n\nlet hero_jump = {\n  image: heroImage,\n  loop: false,\n  onFinish: function(image) {\n    image.updateOptions(hero_fall);\n  },\n\n  numberOfFrames: 7,\n  ticksPerFrame: 3,\n\n  startingColumn: 1,\n  startingRow: 2,\n  framesPerRow: 7,\n\n  frameIndex: 0\n};\n\nlet hero_slash = {\n  image: heroImage,\n  loop: false,\n  onFinish: function(image) {\n    image.updateOptions(hero_slash2);\n    image.gameObject.attackingPosition.addComponent(\n      image.gameObject.attackingHitbox\n    );\n  },\n\n  numberOfFrames: 1,\n  ticksPerFrame: 5,\n\n  startingColumn: 1,\n  startingRow: 6,\n  framesPerRow: 7,\n\n  frameIndex: 0\n};\nlet hero_slash2 = {\n  image: heroImage,\n  loop: false,\n  onFinish: function(image) {\n    //image.gameObject.finishAttack();\n    image.updateOptions(hero_slash3);\n    image.gameObject.attackingPosition.removeComponent(\n      image.gameObject.attackingHitbox\n    );\n  },\n\n  numberOfFrames: 1,\n  ticksPerFrame: 5,\n\n  startingColumn: 2,\n  startingRow: 6,\n  framesPerRow: 7,\n\n  frameIndex: 0\n};\nlet hero_slash3 = {\n  image: heroImage,\n  loop: false,\n  onFinish: function(image) {\n    image.gameObject.finishAttack();\n  },\n\n  numberOfFrames: 2,\n  ticksPerFrame: 5,\n\n  startingColumn: 3,\n  startingRow: 6,\n  framesPerRow: 7,\n\n  frameIndex: 0\n};\n\nconst SPEED = 3;\nconst JUMP_SPEED = 12;\nconst GRAVITY = 0.5;\n\nclass HeroComponent extends Dna.Component {\n  constructor(physics) {\n    super();\n\n    //TODO handle mouse input\n    let input = {\n      //wasd\n      //up: 87,\n      //down: 83,\n      65: \"left\",\n      68: \"right\",\n      32: \"jump\",\n      17: \"attack\"\n      //left: 65,\n      //right: 68,\n      //jump: 32, // space\n      //attack: 17 // ctrl\n\n      //arrowkeys\n      //up: 38,\n      //down: 40,\n      //left: 37,\n      //right: 39,\n      //jump: 90, // z\n      //attack: 88 // x\n      //secondary: 17\n    };\n    let onKeyDown = {\n      32: () => {\n        this.jump();\n      }\n    };\n    this.keyboard = new Dna.Input.Keyboard(input, onKeyDown);\n    this.physics = physics;\n\n    this.attacking = false;\n  }\n\n  update(deltaTime) {\n    //console.log(this.gameObject.attackingHitbox);\n\n    let x = 0;\n    if (this.keyboard.left) x -= 1;\n    if (this.keyboard.right) x += 1;\n    this.physics.xv = x * SPEED;\n\n    if (x < 0) {\n      this.gameObject.transform.xScale = -1;\n    } else if (x > 0) {\n      this.gameObject.transform.xScale = 1;\n    }\n\n    if (!this.gameObject.attacking && this.gameObject.grounded) {\n      if (x == 0) {\n        this.gameObject.image.updateOptions(hero_idle);\n      } else {\n        this.gameObject.image.updateOptions(hero_run);\n      }\n    }\n\n    if (this.keyboard.attack) {\n      if (!this.gameObject.attacking) {\n        this.gameObject.attack();\n      }\n    }\n  }\n\n  jump() {\n    console.log(this);\n    if (this.gameObject.grounded) {\n      this.physics.yv = -JUMP_SPEED;\n      this.gameObject.grounded = false;\n      this.gameObject.gravity.active = true;\n      this.gameObject.image.updateOptions(hero_jump);\n    }\n  }\n}\n\nclass Hero extends Dna.GameObject {\n  constructor(parent, position, enemyHurtboxes) {\n    super(parent, position, []);\n\n    //this.grounded;\n    this.image = new Dna.Components.Image(default_sprite);\n    this.image.updateOptions(hero_idle);\n    this.addComponent(this.image);\n\n    this.physics = new Dna.Components.SimplePhysics();\n    this.addComponent(this.physics);\n\n    this.gravity = new Dna.Components.Acceleration(this.physics, {\n      angle: Dna.Utilities.Degrees.DOWN,\n      accel: GRAVITY\n    });\n    this.addComponent(this.gravity);\n\n    this.hurtbox = new Dna.Components.Hitbox({\n      width: WIDTH,\n      height: HEIGHT\n    });\n    this.addComponent(this.hurtbox);\n\n    this.addComponent(new HeroComponent(this.physics));\n\n    // this is not added to the gameObject until the attack is triggered\n    this.attackingPosition = new Dna.GameObject(this, { x: 15 });\n    this.attackingHitbox = new Dna.Components.Hitbox({\n      width: 10,\n      height: 20,\n      hurtboxes: enemyHurtboxes,\n      onCollision: hurtbox => {\n        console.log(\"attack hit!!\");\n      },\n      onCollisionEnter: hurtbox => {\n        console.log(\"enter attack hit!!\");\n      }\n    });\n  }\n\n  attack() {\n    this.attacking = true;\n    console.log(\"attacking\");\n    //this.attackingPosition.addComponent(this.attackingHitbox);\n\n    this.image.updateOptions(hero_slash);\n    console.log(hero_slash.loop);\n\n    //TODO may want to use a timeout here, instead of animation on finish\n    //setTimeout(() => {\n    //  this.gameObject.finishAttack();\n    //}, 500);\n  }\n  finishAttack() {\n    console.log(this);\n    this.attacking = false;\n    //this.attackingPosition.removeComponent(this.attackingHitbox);\n    console.log(\"finishing attack\");\n\n    //TODO this should be based on hero's current state\n    this.image.updateOptions(hero_idle);\n\n    this.attackingHitbox.clearCollisions();\n  }\n\n  ground() {\n    this.grounded = true;\n\n    this.gravity.active = false;\n    this.physics.yv = 0;\n  }\n\n  unground() {\n    this.grounded = false;\n    this.gravity.active = true;\n\n    console.log(\"unground\");\n  }\n}\n\nexport { Hero, heroAssets };\n","//TODO should not use hitboxes for this, doens't account for condition where unit moves past boundary in single frame\n//TODO axis-aligned bounding box\nclass Boundary extends Dna.GameObject {\n  constructor(parent, alignment, offset, width, height, hurtboxes) {\n    super(parent, alignment.getPosition(offset), [\n      new Dna.Components.Rectangle({ width: width, height: height })\n    ]);\n\n    let hitbox = new Dna.Components.Hitbox({\n      width: width,\n      height: height,\n      hurtboxes: hurtboxes,\n      onCollision: alignment.onCollision\n    });\n    this.addComponent(hitbox);\n  }\n}\n\n//TODO this offset logic is jank\nlet Alignments = {\n  TOP: {\n    getPosition: offset => {\n      return { y: offset };\n    },\n    onCollision: function(hurtbox) {\n      //TODO set absolute\n      let offset = hurtbox.radius || hurtbox.height / 2;\n      hurtbox.gameObject.transform.y =\n        this.gameObject.transform.y + this.height / 2 + offset;\n      console.log(\"collision detected\");\n    }\n  },\n  BOTTOM: {\n    getPosition: offset => {\n      return { y: offset };\n    },\n    onCollision: function(hurtbox) {\n      //TODO set absolute\n      let offset = hurtbox.radius || hurtbox.height / 2;\n      hurtbox.gameObject.transform.y =\n        this.gameObject.transform.y - this.height / 2 - offset;\n      hurtbox.gameObject.ground();\n    },\n    onCollisionExit: hurtbox => {\n      console.log(\"onCollisionExit\");\n      hurtbox.gameObject.unground();\n    }\n  },\n  LEFT: {\n    getPosition: offset => {\n      return { x: offset };\n    },\n    onCollision: function(hurtbox) {\n      //TODO set absolute\n      let offset = hurtbox.radius || hurtbox.width / 2;\n      hurtbox.gameObject.transform.x =\n        this.gameObject.transform.x + this.width / 2 + offset;\n    }\n  },\n  RIGHT: {\n    getPosition: offset => {\n      return { x: offset };\n    },\n    onCollision: function(hurtbox) {\n      //TODO set absolute\n      let offset = hurtbox.radius || hurtbox.width / 2;\n      hurtbox.gameObject.transform.x =\n        this.gameObject.transform.x - this.width / 2 - offset;\n    }\n  }\n};\n\nexport { Boundary, Alignments };\n","const WIDTH = 100;\nconst HEIGHT = 10;\n\nclass Platform extends Dna.GameObject {\n  constructor(parent, position, hurtboxes) {\n    super(parent, position, [\n      new Dna.Components.Rectangle({ width: WIDTH, height: HEIGHT })\n    ]);\n\n    let hitbox = new Dna.Components.Hitbox({\n      width: WIDTH,\n      height: HEIGHT,\n      hurtboxes: hurtboxes,\n      onCollision: function(hurtbox) {\n        let hurtboxOffset = hurtbox.radius || hurtbox.height / 2;\n        let yOffset = this.gameObject.transform.y - HEIGHT / 2 - hurtboxOffset;\n        //TODO this should be less than, but is still affected by gravity????\n        if (hurtbox.gameObject.transform.prevY <= yOffset) {\n          hurtbox.gameObject.transform.y = yOffset;\n          hurtbox.gameObject.ground();\n        }\n      },\n      onCollisionExit: hurtbox => {\n        console.log(\"onCollisionExit\");\n        hurtbox.gameObject.unground();\n      }\n    });\n    this.addComponent(hitbox);\n  }\n}\n\nexport { Platform };\n","const SIZE = 20;\n\n//TODO should have a physics component to prevent it from falling through the floor\nclass Target extends Dna.GameObject {\n  constructor(parent, position, enemyHurtboxes) {\n    super(parent, position, [\n      new Dna.Components.Rectangle({ width: SIZE, height: SIZE }),\n      new Dna.Components.Hitbox({\n        width: SIZE,\n        height: SIZE,\n        hitboxSet: enemyHurtboxes\n      })\n    ]);\n  }\n}\n\nexport { Target };\n","const SPEED = 1;\n\nclass AI extends Dna.Component {\n  constructor(hero, attackRange) {\n    super();\n\n    this.hero = hero;\n    //this.physics = physics;\n    this.attackRange = attackRange;\n\n    this.attacking = false;\n  }\n\n  update(deltaTime) {\n    let distance = this.gameObject.transform.x - this.hero.transform.x;\n    if (this.attacking) return;\n\n    if (Math.abs(distance) < this.attackRange) {\n      this.gameObject.attack();\n    } else {\n      //TODO move\n      let move = distance > 0 ? -SPEED : SPEED;\n      this.gameObject.transform.x += move;\n    }\n  }\n\n  attack() {\n    this.attacking = true;\n  }\n\n  endAttack() {\n    this.attacking = false;\n  }\n}\n\nclass Facing extends Dna.Component {\n  constructor(hero, imageObject) {\n    super();\n\n    this.hero = hero;\n    this.imageObject = imageObject;\n  }\n\n  update() {\n    //console.log(this.gameObject.transform);\n    let distance = this.gameObject.transform.x - this.hero.transform.x;\n    this.imageObject.transform.xScale = distance > 0 ? -1 : 1;\n  }\n}\n\nexport { AI, Facing };\n","import { AI, Facing } from \"./Monster\";\nimport girlAttackSprite from \"./assets/zombiegirl/attack.png\";\nimport girlWalkSprite from \"./assets/zombiegirl/walk.png\";\n\nlet girlAttackImage = new Dna.Dom.Image(girlAttackSprite);\nlet girlWalkImage = new Dna.Dom.Image(girlWalkSprite);\n\nlet zombieAssets = new Dna.Assets({\n  attack: girlAttackImage,\n  walk: girlWalkImage\n});\n\nconst ZOMBIE_DEFAULT = {\n  type: Dna.Components.Image.types.stretched,\n  width: 521,\n  height: 576,\n  ticksPerFrame: 10,\n\n  destWidth: 521 / 6,\n  destHeight: 576 / 6\n};\n//let girlAttackImage = new Image();\n//girlAttackImage.src = girlAttackSprite;\nlet girlAttack = {\n  image: girlAttackImage,\n  loop: false,\n\n  numberOfFrames: 8\n};\n//let girlWalkImage = new Image();\n//girlWalkImage.src = girlWalkSprite;\nlet girlWalk = {\n  image: girlWalkImage,\n  loop: true,\n\n  numberOfFrames: 10\n};\n\nclass Zombie extends Dna.GameObject {\n  constructor(canvas, position, hero, heroHurtbox, monsterHurtboxes) {\n    super(canvas, position, [new AI(hero, 10)]);\n\n    let image = new Dna.Components.Image(ZOMBIE_DEFAULT);\n    image.updateOptions(girlWalk);\n    let imageObject = new Dna.GameObject(this, {}, [image]);\n\n    this.addComponent(new Facing(hero, imageObject));\n  }\n\n  attack() {\n    console.log(\"attacking\");\n    //TODO change animation\n    //TODO hitboxes\n  }\n}\n\nexport { Zombie, zombieAssets };\n","import { Hero, heroAssets } from \"./Hero\";\nimport { Boundary, Alignments } from \"./Boundary\";\nimport { Platform } from \"./Platform\";\nimport { Target } from \"./Target\";\nimport { Zombie, zombieAssets } from \"./Zombie\";\n\nconst RADIUS = 20;\n\nlet canvas = new Dna.Canvas(document.getElementById(\"canvas\"));\n\nfunction start() {\n  let gravity = new Dna.Components.SimplePhysics({ xy: 5 });\n\n  let enemyHurtboxes = [];\n  new Target(canvas, { y: 225 }, enemyHurtboxes);\n\n  let hero = new Hero(canvas, {}, enemyHurtboxes);\n  let hurtboxes = [hero.hurtbox];\n\n  let zombie0 = new Zombie(canvas, {}, hero, hurtboxes, enemyHurtboxes);\n\n  new Platform(canvas, { y: 150, x: -100 }, hurtboxes);\n  new Platform(canvas, { y: 150, x: 100 }, hurtboxes);\n  new Platform(canvas, { y: 50 }, hurtboxes);\n\n  const SHORT = 10;\n  const X_LONG = 500;\n  const Y_LONG = 700;\n  const X_OFFSET = 350;\n  const Y_OFFSET = 250;\n\n  let topBoundary = new Boundary(\n    canvas,\n    Alignments.TOP,\n    -Y_OFFSET,\n    Y_LONG,\n    SHORT,\n    hurtboxes\n  );\n  let bottomBoundary = new Boundary(\n    canvas,\n    Alignments.BOTTOM,\n    Y_OFFSET,\n    Y_LONG,\n    SHORT,\n    hurtboxes\n  );\n\n  let leftBoundary = new Boundary(\n    canvas,\n    Alignments.LEFT,\n    -X_OFFSET,\n    SHORT,\n    X_LONG,\n    hurtboxes\n  );\n  let rightBoundary = new Boundary(\n    canvas,\n    Alignments.RIGHT,\n    X_OFFSET,\n    SHORT,\n    X_LONG,\n    hurtboxes\n  );\n}\n\n/*\nimport heroSprite from \"./assets/hero/hero.png\";\nimport heroRunSprite from \"./assets/hero/hero_run.png\";\n\nlet heroAssets = new Dna.Assets({\n  hero: heroSprite,\n  run: heroRunSprite\n});\n*/\n\nlet scene = new Dna.Scene(\n  [canvas],\n  new Dna.Assets({\n    hero: heroAssets,\n    zombie: zombieAssets\n  }),\n  start\n);\n\nscene.load();\n"]}